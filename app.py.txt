import streamlit as st

# Titel der App
st.title("Coaching Aufgaben Manager")

# Aufgabenkategorien und Aufgaben
tasks = {
    "ğŸ“Œ Content-Erstellung & Marketing": [
        "Content-Ideen entwickeln",
        "BeitrÃ¤ge fÃ¼r Social Media schreiben",
        "Reels fÃ¼r Social Media drehen",
        "Podcasts oder Audioformate aufnehmen",
        "Blogartikel schreiben",
        "Email-Newsletter schreiben",
        "Webinare oder Live-Events planen & moderieren",
        "Content fÃ¼r YouTube oder andere Plattformen produzieren",
        "Lead Magnets (z.B. E-Books, Checklisten, Webinare) erstellen",
        "Inhalte fÃ¼r Online-Kurse oder Memberships erstellen",
        "Content repurposen (z.B. Blogartikel in Social-Media-Posts umwandeln)",
        "Verkaufsseiten & Landingpages erstellen",
        "Automatisierte Funnels & E-Mail-Marketing aufsetzen"
    ],
    "ğŸ“Œ Vertrieb & Kundengewinnung": [
        "Vernetzen mit Profilen",
        "Termine setten im Chat",
        "Qualifizierungstelefonate fÃ¼hren",
        "Sales Calls fÃ¼hren",
        "Angebote versenden",
        "Sales Calls auswerten",
        "Follow-up mit Interessenten & Leads",
        "Angebote & Preise kalkulieren",
        "Testimonials & Fallstudien sammeln"
    ],
    "ğŸ“Œ Kundenbetreuung": [
        "Fragen beantworten Email, Whatsapp, Gruppe",
        "Community-Management in Gruppen (z.B. Facebook, Telegram, Discord)",
        "Onboarding neuer Kunden (EinfÃ¼hrung, Erwartungen klÃ¤ren)",
        "Offboarding-Prozess & Kundenbindung verbessern",
        "Betreuung & Nachbereitung von Coaching-Teilnehmern",
        "Notizen & Fortschrittsberichte fÃ¼r Kunden fÃ¼hren"
    ],
    "ğŸ“Œ Administration & Organisation": [
        "Kalender & Termine organisieren",
        "Meetings & Coaching-Sessions planen",
        "Rechnungen schreiben & Buchhaltung fÃ¼hren",
        "Tools & Software verwalten (z.B. Zoom, Notion, Kajabi)",
        "Kundendaten pflegen & verwalten",
        "Datenschutz & rechtliche Vorgaben beachten",
        "E-Mails & Anfragen beantworten",
        "Dokumentationen & ArbeitsablÃ¤ufe strukturieren"
    ],
    "ğŸ“Œ Strategie & Weiterentwicklung": [
        "Eigene Positionierung & Branding verbessern",
        "Business-Strategie entwickeln & optimieren",
        "Markt- & Wettbewerbsanalyse durchfÃ¼hren",
        "Angebote & Programme weiterentwickeln",
        "PersÃ¶nliche Weiterbildung (Kurse, BÃ¼cher, Mentoring)",
        "Preisstrategie & Angebotsstruktur Ã¼berdenken",
        "Feedback auswerten & das Coaching-Angebot optimieren"
    ]
}

# Initialisierung der Session State Variablen
if "selected_tasks" not in st.session_state:
    st.session_state.selected_tasks = []

# Auswahl der Kategorie
category = st.selectbox("WÃ¤hle eine Kategorie", list(tasks.keys()))

# Anzeige der Aufgaben in der ausgewÃ¤hlten Kategorie
st.write(f"Aufgaben in {category}:")
available_tasks = tasks[category]

# Multiselect fÃ¼r die Aufgabenauswahl
selected_tasks_from_category = st.multiselect(
    "WÃ¤hle deine wÃ¶chentlichen Aufgaben",
    available_tasks,
    default=[task for task in available_tasks if task in st.session_state.selected_tasks]
)

# Aktualisiere die ausgewÃ¤hlten Aufgaben in der Session State
for task in selected_tasks_from_category:
    if task not in st.session_state.selected_tasks:
        st.session_state.selected_tasks.append(task)

# Entferne Aufgaben, die nicht mehr ausgewÃ¤hlt sind
for task in st.session_state.selected_tasks.copy():
    if task not in selected_tasks_from_category and task in available_tasks:
        st.session_state.selected_tasks.remove(task)

# MÃ¶glichkeit, eigene Aufgaben hinzuzufÃ¼gen
new_task = st.text_input("FÃ¼ge eine eigene Aufgabe hinzu")
if st.button("Aufgabe hinzufÃ¼gen"):
    if new_task and new_task not in st.session_state.selected_tasks:
        st.session_state.selected_tasks.append(new_task)
        st.success(f"Aufgabe '{new_task}' hinzugefÃ¼gt!")
    elif new_task in st.session_state.selected_tasks:
        st.warning("Diese Aufgabe existiert bereits in der Liste.")

# Anzeige der ausgewÃ¤hlten Aufgaben
st.write("Deine ausgewÃ¤hlten Aufgaben:")
for task in st.session_state.selected_tasks:
    st.write(f"- {task}")

# MÃ¶glichkeit, die ausgewÃ¤hlten Aufgaben zu speichern
if st.button("Aufgaben speichern"):
    st.write("Aufgaben wurden gespeichert!")